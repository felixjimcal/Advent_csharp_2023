name: Run Unit Tests and Generate Coverage Report

on: 
  push:
    paths:
      - '**/*.cs'
      - '**/*.csproj'
      - '**/*.sln'

jobs:
  unit_tests:
    name: Unit Testing
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2.1.0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x'

    - name: Cache NuGet packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/challenges.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore .\challenges\challenges.sln

    - name: Build
      run: dotnet build .\challenges\challenges.sln --configuration Release --no-restore

    - name: Test
      run: dotnet test .\ChallengesTests --no-restore --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

  coverage_report:
    name: Code Coverage Report
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.1.0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x'

    - name: Generate Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
